from typing import Tuple, List
import pandas as pd
import re

stuff = [
    "Total",
    "A Products of agriculture, forestry & fishing",
    "01 Products of agriculture",
    "01.1 Non-perennial crops",
    "01.2 Perennial crops",
    "01.3 Planting material",
    "01.4 Live animals & animal products",
    "02 Forestry products",
    "02.1 Trees & their seeds",
    "02.2 Wood in the rough",
    "02.3 Wild growing non-wood products",
    "03 Fish & other fishing products; aquaculture products",
    "B Mining & quarrying",
    "05 Coal & lignite",
    "05.1 Coal",
    "05.2 Lignite",
    "06 Crude petroleum & natural gas",
    "06.1 Crude petroleum",
    "06.2 Natural gas",
    "07 Metal ores",
    "07.1 Iron ores",
    "07.2 Non-ferrous metal ores",
    "08 Other mining & quarrying product",
    "08.1 Unworked stone, gravel, sand, clays & kaolin",
    "08.9 Mining & quarrying products n.e.c",
    "C Manufactured products",
    "10 Food products",
    "10.1 Preserved meat & meat products",
    "10.2-3 Processed and preserved fish, crustaceans, molluscs, fruit and vegetables",
    "10.2 Processed & preserved fish, crustaceans & molluscs",
    "10.3 Processed & preserved fruit and vegetables",
    "10.4 Vegetable & animal oils & fats",
    "10.5 Dairy products",
    "10.6 Grain mill products, starches & starch products",
    "10.7 Bakery & farinaceous products",
    "10.8 Other food products",
    "10.9 Prepared feeds for farm animals",
    "11 Beverages",
    "11.01-6 Alcoholic beverages",
    "11.01 Distilled alcoholic beverages",
    "11.02 Wine",
    "11.03 Cider & other fruit wines",
    "11.04 Other non-distilled fermented beverages",
    "11.05 Beer",
    "11.06 Malt",
    "11.07 Soft drinks & bottled waters",
    "12 Tobacco products",
    "12.0 Tobacco products",
    "13 Textiles",
    "13.1 Textile yarn & thread",
    "13.2 Woven textiles",
    "13.9 Other textiles",
    "14 Wearing apparel",
    "14.1 Wearing apparel, except fur apparel",
    "14.2 Articles of fur",
    "14.3 Knitted & crocheted hosiery, pullovers & cardigans",
    "15 Leather & related products",
    "15.1 Tanned and dressed leather & fur",
    "15.2 Footwear",
    "16 Wood, and products of wood, cork",
    "16.1 Wood, sawn & planed",
    "16.2 Products of wood, cork, straw & plaiting material",
    "17 Paper & paper products",
    "17.1 Pulp, paper & paperboard",
    "17.2 Articles of paper & paperboard",
    "18 Printing & recording services",
    "18.1 Printing type & blocks",
    "19 Coke & refined petroleum product",
    "19.1 Coke oven products",
    "19.2 Refined petroleum products",
    "20 Chemicals & chemical products",
    "20A Industrial gases, inorganics",
    "20.11 Industrial gases",
    "20.13 Other inorganic basic chemicals",
    "20.15 Fertilisers & nitrogen compounds",
    "20B Petrochemicals",
    "20.14 Other organic basic chemicals",
    "20.16 Plastics in primary forms",
    "20.17 Synthetic rubber",
    "20.6 Man-made fibres",
    "20C Dyestuffs, agro-chemicals",
    "20.12 Dyes & pigments",
    "20.2 Pesticides & other agrochemical products",
    "20.3 Paints, varnishes & printing ink",
    "20.4 Cleaning & polishing preparation",
    "20.5 Other chemical products",
    "21 Pharmaceutical products & preparations",
    "21.1 Basic pharmaceutical products",
    "21.2 Pharmaceutical preparations",
    "22 Rubber & plastic products",
    "22.1 Rubber products",
    "22.2 Plastic products",
    "23 Other non-metallic mineral products",
    "23OTHER Glass, refractory, clay, other porcelain, and ceramic, stone and abrasive products",
    "23.1 Glass & glass products",
    "23.2 Refractory products",
    "23.3 Bricks, tiles etc",
    "23.4 Other porcelain & ceramic products",
    "23.7 Cut, shaped & finished stone",
    "23.9 Other non-metallic mineral products",
    "23.5-6 Manufacture of cement, lime, plaster and articles of concrete, cement and plaster",
    "23.5 Cement, lime & plaster",
    "23.6 Articles of concrete, cement & products",
    "24 Basic metals",
    "24.1-3 Basic iron and steel",
    "24.1 Basic iron, steel & ferro-alloys",
    "24.2 Non-cast steel tubes, pipes & hollow profiles",
    "24.3 Other products of the first processing of steel",
    "24.4-5 Other basic metals and casting",
    "24.4 Basic precious & other non-ferrous metals",
    "24.5 Cast iron & steel tubes & pipes",
    "25 Fabricated metal products",
    "25OTHER Fabricated metal products excl machinery and equipment and weapons & ammunition",
    "25.1 Structural metal products",
    "25.2 Tanks, reservoirs & containers of metal",
    "25.3 Steam generators & nuclear reactors",
    "25.7 Cutlery, tools & general hardware",
    "25.9 Other fabricated metal products",
    "25.4 Weapons & ammunition",
    "26 Computer, electronic & optical products",
    "26.1 Electronic components & boards",
    "26.2 Computers & peripherals",
    "26.3 Communication equipment",
    "26.4 Consumer electronics",
    "26.5 Measuring, testing & navigating equip; watches and clocks",
    "26.6 Irradiation, electromedical & electrotherapeutic",
    "26.7 Optical instruments & photographic equipment",
    "26.8 Magnetic & optical media",
    "27 Electrical equipment",
    "27.1 Electric motors & electrictiy distribution & control",
    "27.2 Batteries & accumulators",
    "27.3 Wiring & wiring devices",
    "27.4 Electric lighting equipment",
    "27.5 Domestic appliances",
    "27.9 Other electrical equipment",
    "28 Machinery & equipment n.e.c.",
    "28.1 General-purpose machinery",
    "28.2 Other general-purpose machinery",
    "28.3 Agricultural & forestry machines",
    "28.4 Metal forming machinery & machine tools",
    "28.9 Other special-purpose machinery",
    "29 Motor vehicles, trailers & semi-trailers",
    "29.1 Motor vehicles",
    "29.2 Bodies for motor vehicles; trailers and semi-trailers",
    "29.3 Parts & accessories for motor vehicles",
    "30 Other transport equipment",
    "30.1 Ships, boats & floating structures",
    "30.3 Air & spacecraft & related machinery",
    "30OTHER Other transport equipment",
    "30.2 Railway locomotives & rolling stock",
    "30.4 Military fighting vehicles",
    "30.9 Transport equipment n.e.c.",
    "31 Furniture",
    "32 Other manufactured goods",
    "32.1 Jewellery, bijouterie & related articles",
    "32.2 Musical instruments",
    "32.3 Sports goods",
    "32.4 Games & toys",
    "32.5 Medical & dental instruments & supplies",
    "32.9 Manufactured goods n.e.c.",
    "D Electricity, gas, steam & air conditioning",
    "35 Electricity, gas, steam & air conditioning",
    "35.1 Electricity",
    "35.2 Manufactured gas",
    "E Water supply, sewerage & waste management",
    "37 Sewerage",
    "38 Waste",
    "38.1 Waste",
    "38.2 Waste treatment and disposal services",
    "38.3 Secondary raw materials",
    "J Information & communication services",
    "58 Publishing",
    "58.1 Printed matter",
    "58.2 Packaged computer software",
    "59 Films & recordings",
    "59.1 Films & videos",
    "59.2 Audio recordings & printed music",
    "M Professional, scientific & technical services",
    "71 Architectural, engineering, testing & analysis services",
    "71.1 Architectural plans & drawing",
    "74 Other professional, scientific & technical services",
    "74.2 Exposed photographic film",
    "R Arts, entertainment & recreation",
    "90 Creative, arts & entertainment services",
    "90.0 Paintings & sculptures",
    "91 Library, archive, museum & other cultural services",
    "91.0 Antiques & collections",
    "S Other services",
    "96 Other personal services",
    "Residual seasonal adjustment",
]

notation_with_label = list([(item.split(" ", 1)[0], item) for item in stuff])

current_parent_hierarchy = []
def get_maybe_parent(notation: str):
    if len(current_parent_hierarchy) == 0:
        return None

    possible_parent = current_parent_hierarchy[-1]
    if notation.startswith(possible_parent):
        return possible_parent
    elif re.match("^[0-9]+", notation) and re.match("^[a-zA-Z]+", possible_parent):
        return possible_parent
    else:
        current_parent_hierarchy.pop()
        return get_maybe_parent(notation)

notation_with_label_and_maybe_parent = []
for (notation, label) in notation_with_label:
    notation_with_label_and_maybe_parent.append((notation, label, get_maybe_parent(notation)))
    current_parent_hierarchy.append(notation)

output_codelist_data = pd.DataFrame({
    # Label,Notation,Parent Notation,Sort Priority
    "Label": [b for (a, b, c) in notation_with_label_and_maybe_parent],
    "Notation": [a for (a, b, c) in notation_with_label_and_maybe_parent],
    "Parent Notation": [c for (a, b, c) in notation_with_label_and_maybe_parent],
    "Sort Priority": range(0, len(notation_with_label))
})

output_codelist_data["Parent Notation"] = output_codelist_data["Parent Notation"].map(lambda pn: pn if pn is not None else "Total")
output_codelist_data.loc[0, "Parent Notation"] = None
output_codelist_data.to_csv("../../reference/codelists/product.csv", index=False)